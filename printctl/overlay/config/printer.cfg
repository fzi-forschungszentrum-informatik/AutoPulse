# This file contains pin mappings for the stock 2021 Creality Ender 3
# S1 & S1 Pro. To use this config, check the STM32 Chip on the
# Mainboard, during "make menuconfig" select accordingly either the
# STM32F103 with "28KiB bootloader" or the STM32F401 with
# "64KiB bootloader" and serial (on USART1 PA10/PA9) for both.

# For a direct serial connection, in "make menuconfig" select
# "Enable extra low-level configuration options" and  Serial
# (on USART2 PA3/PA2), which is on the 10 pin IDC cable used
# for the LCD module as follows: 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The filename
# must be changed to "firmware.bin"

# With STM32F401, you might need to put "firmware.bin" in a
# folder on the SD card called "STM32F4_UPDATE" in order to flash.

# See https://github.com/Klipper3d/klipper/blob/master/docs/Config_Reference.md for a description of parameters.


################
# Basic Config #
################

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 3000
max_z_velocity: 5
max_z_accel: 30
square_corner_velocity: 5.0


###################################
# Enable force move for debugging #
###################################
[force_move]
enable_force_move: True


############
# Steppers #
############
		 
[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 256
rotation_distance: 40
endstop_pin: !PA5
position_endstop: 0
position_max: 260
homing_speed: 50

[tmc2208 stepper_x]
interpolate: false
uart_pin: PA2
run_current: 0.8
stealthchop_threshold: 0

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 256
rotation_distance: 40
endstop_pin: !PA6
position_endstop: 0
position_max: 245
homing_speed: 50

[tmc2208 stepper_y]
interpolate: false
uart_pin: PB2
run_current: 0.8
stealthchop_threshold: 0

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 32
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 270
position_min: -15

[tmc2208 stepper_z]
interpolate: false
uart_pin: PB1
# High current, we are driving two motors with one driver
run_current: 1.2
stealthchop_threshold: 0


#############
# LED Setup #
#############

[led probe_led]
white_pin: PA7

[led chip_led]
white_pin: PA0


##################################
# BLTouch, Safe Z Home, Bed Mesh #
##################################

[bltouch]
sensor_pin: ^PC14 
control_pin: PC13 
# offset between the chip-shouter probe mount and the BLTouch
x_offset: -22.991
y_offset: -34.579
z_offset: 0   # This offset will be overwritten by pulsecontrol
# speed:35
# samples:3
# samples_result: median
# samples_tolerance: 0.0075
# samples_tolerance_retries: 10
probe_with_touch_mode: true
# stow_on_each_sample: false
# pin_up_reports_not_triggered: True
# pin_up_touch_mode_reports_triggered: False

[safe_z_home]
# Home on the edge of the bed.
# This will protect the chipshouter from crashing into the bed if the probe fails.
home_xy_position: 258,230
speed: 50
z_hop: 40
z_hop_speed: 5

# Bed Screw
[bed_screws]
screw1: 32, 35
screw2: 205, 35
screw3: 205, 202
screw4: 32, 202
 
[screws_tilt_adjust]
screw1: 64, 76
screw1_name: front left screw
screw2: 237, 76
screw2_name: front right screw
screw3: 237, 230
screw3_name: rear right screw
screw4: 60, 230
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3 # Use CW for Clowise and CCW for Counter Clockwise 


###########
# Sensors #
###########

[temperature_sensor Board_MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


########
# Misc #
########

[virtual_sdcard]
path: /opt/printer_data/gcodes

[display_status]

[pause_resume]

# These macros are unused
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
